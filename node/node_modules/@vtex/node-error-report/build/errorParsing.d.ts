export interface ParseableError {
    getDetailsObject: () => Record<string, any>;
}
interface RequestConfig {
    url?: string;
    method?: string;
    params?: any;
    headers?: Record<string, any>;
    data?: any;
    timeout?: string | number;
}
interface Response {
    status?: number;
    statusText?: string;
    headers?: Record<string, any>;
    data?: any;
}
export interface RequestInfo {
    requestConfig: RequestConfig;
    response: Response | undefined;
}
export interface InfraErrorData {
    code: string;
    source: string;
    requestId: string;
}
export declare type ParsedInfo = RequestInfo | Record<string, any> | null;
export declare function isRequestInfo(el: ParsedInfo): el is RequestInfo;
export declare function isInfraErrorData(el: any): el is InfraErrorData;
export declare function parseError(err: any | ParseableError): ParsedInfo;
export {};

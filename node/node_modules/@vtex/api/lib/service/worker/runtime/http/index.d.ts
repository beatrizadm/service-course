import { IOClients } from '../../../../clients/IOClients';
import { ClientsConfig, ParamsContext, RecorderState, ServiceRoute } from '../typings';
export declare const createPrivateHttpRoute: <T extends IOClients, U extends RecorderState, V extends ParamsContext>(clientsConfig: ClientsConfig<T>, serviceHandler: import("koa-compose").Middleware<import("../typings").ServiceContext<T, U, V>> | import("koa-compose").Middleware<import("../typings").ServiceContext<T, U, V>>[], serviceRoute: ServiceRoute, routeId: string) => import("koa-compose").ComposedMiddleware<import("../typings").ServiceContext<T, U, V>>;
export declare const createPublicHttpRoute: <T extends IOClients, U extends RecorderState, V extends ParamsContext>(clientsConfig: ClientsConfig<T>, serviceHandler: import("koa-compose").Middleware<import("../typings").ServiceContext<T, U, V>> | import("koa-compose").Middleware<import("../typings").ServiceContext<T, U, V>>[], serviceRoute: ServiceRoute, routeId: string) => import("koa-compose").ComposedMiddleware<import("../typings").ServiceContext<T, U, V>>;
